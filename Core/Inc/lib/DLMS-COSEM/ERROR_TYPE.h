// ===========================================================================
// Copyright (c) 2018, Electric Power Research Institute (EPRI)
// All rights reserved.
//
// DLMS-COSEM ("this software") is licensed under BSD 3-Clause license.
//
// Redistribution and use in source and binary forms, with or without modification,
// are permitted provided that the following conditions are met:
//
// *  Redistributions of source code must retain the above copyright notice, this
//    list of conditions and the following disclaimer.
//
// *  Redistributions in binary form must reproduce the above copyright notice,
//    this list of conditions and the following disclaimer in the documentation
//    and/or other materials provided with the distribution.
//
// *  Neither the name of EPRI nor the names of its contributors may
//    be used to endorse or promote products derived from this software without
//    specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
// IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
// WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
// OF SUCH DAMAGE.
//
// This EPRI software incorporates work covered by the following copyright and permission
// notices. You may not use these works except in compliance with their respective
// licenses, which are provided below.
//
// These works are provided by the copyright holders and contributors "as is" and any express or
// implied warranties, including, but not limited to, the implied warranties of merchantability
// and fitness for a particular purpose are disclaimed.
//
// This software relies on the following libraries and licenses:
//
// ###########################################################################
// Boost Software License, Version 1.0
// ###########################################################################
//
// * asio v1.10.8 (https://sourceforge.net/projects/asio/files/)
//
// Boost Software License - Version 1.0 - August 17th, 2003
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
// 

///////////////////////////////////////////////////////////
//  ERROR_TYPE.h
//  Implementation of the Class ERROR_TYPE
//  Created on:      13-Sep-2016 8:18:40 PM
//  Original author: Gregory
///////////////////////////////////////////////////////////

#pragma once

#include <stdint.h>

namespace EPRI
{
	typedef uint32_t ERROR_TYPE;
	
	enum ErrorSource : uint8_t
	{
		SRC_DONT_CARE = 0,
		SRC_BASE,
		SRC_MEMORY,
		SRC_CORE,
		SRC_SCHEDULER,
		SRC_SYNCHRONIZATION,
		SRC_DEBUG,
		SRC_HDLC,
    	SRC_SOCKET,
    	SRC_SERIAL
	};

	enum ErrorLevel : uint8_t
	{
		LVL_DONT_CARE = 0,
		LVL_EMERGENCY,		// System is unusable
		LVL_ALERT,			// Action must be taken immediately
		LVL_CRITICAL,		// Critical conditions
		LVL_ERROR,			// Error conditions
		LVL_WARNING,		// Warning conditions
		LVL_NOTICE,			// Normal but significant condition
		LVL_INFORMATIONAL,	// Informational messages
		LVL_DEBUG			// Level messages
	};

	
	inline ERROR_TYPE MakeError(ErrorSource Source, ErrorLevel Level, uint16_t Code)
	{
		return (ERROR_TYPE)(Source << 24) | (Level << 16) | Code;
	}
	inline ErrorSource GetErrorSource(ERROR_TYPE Err)
	{
		return (ErrorSource)((Err & 0xFF000000) >> 24);
	}
	inline ErrorLevel GetErrorLevel(ERROR_TYPE Err)
	{
		return (ErrorLevel)((Err & 0x00FF0000) >> 16);
	}
	template <class T>
		inline T GetErrorCode(ERROR_TYPE Err)
		{
			return (T)(Err & 0x0000FFFF);
		}
	
	const ERROR_TYPE SUCCESSFUL = 0L;
	const ERROR_TYPE UNSUCCESSFUL = 1L;				// Himanshu - added.
	const ERROR_TYPE EVENT = 2L;				// Himanshu - added.
    const ERROR_TYPE ERR_TIMEOUT = 0xffff;		// Himanshu - changed from 0L

}
